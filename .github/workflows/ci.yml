name: CI

# yamllint disable-line rule:truthy
on:
  push:
  pull_request: ~

env:
  CACHE_VERSION: 1
  DEFAULT_PYTHON: "3.10"
  PRE_COMMIT_HOME: ~/.cache/pre-commit

jobs:
  # Separate job to pre-populate the base dependency cache
  # This prevents upcoming jobs to do the same individually
  prepare-base:
    name: Prepare base dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        id: python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: venv
          key: ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-venv-${{ steps.python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-venv-${{ steps.python.outputs.python-version }}-
      - name: Create Python virtual environment
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install -U pip setuptools pre-commit
          pip install -e '.[testing]'

  pre-commit:
    name: Prepare pre-commit environment
    runs-on: ubuntu-latest
    needs: prepare-base
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v4
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: venv
          key: ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-venv-${{ steps.python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}
      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1
      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v3
        with:
          path: ${{ env.PRE_COMMIT_HOME }}
          key: ${{ env.CACHE_VERSION}}-${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: ${{ env.CACHE_VERSION}}-${{ runner.os }}-pre-commit-
      - name: Install pre-commit dependencies
        if: steps.cache-precommit.outputs.cache-hit != 'true'
        run: |
          . venv/bin/activate
          pre-commit install-hooks

  lint-pre-commit:
    name: Check pre-commit
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v4
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: venv
          key: ${{ env.CACHE_VERSION}}-${{ runner.os }}-base-venv-${{ steps.python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}
      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1
      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v3
        with:
          path: ${{ env.PRE_COMMIT_HOME }}
          key: ${{ env.CACHE_VERSION}}-${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Fail job if cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1
      - name: Run pre-commit
        run: |
          . venv/bin/activate
          pre-commit run --all-files --show-diff-on-failure
